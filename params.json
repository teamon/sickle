{"name":"Sickle","tagline":"Sickle is dead simple library for building complex command line tools","body":"[![Code Climate](https://codeclimate.com/github/teamon/sickle.png)](https://codeclimate.com/github/teamon/sickle)\r\n[![Build Status](https://travis-ci.org/teamon/sickle.png?branch=master)](https://travis-ci.org/teamon/sickle)\r\n[![Gem Version](https://badge.fury.io/rb/sickle.png)](https://rubygems.org/gems/sickle)\r\n[![Coverage Status](https://coveralls.io/repos/teamon/sickle/badge.png?branch=master)](https://coveralls.io/r/teamon/sickle)\r\n\r\n# Sickle\r\n\r\n## Description\r\n\r\nSickle is dead simple library for building complex command line tools. A lot of ideas and examples were inspired by [thor](https://github.com/wycats/thor).\r\n\r\n#### Features:\r\n\r\n* Based on classes and modules\r\n* Support for commands\r\n* Support for namespaces\r\n* Support for command options and global options\r\n* Usage and help for free\r\n* No external dependencies (only stdlib optparse)\r\n\r\n\r\n## Installation\r\n\r\nYou are probably building command line tool that will be released as gem, just add that line to you gemspec.\r\n\r\n```ruby\r\nspec.add_dependency 'sickle'\r\n```\r\n\r\n## Usage\r\n\r\n### Basic usage\r\n\r\nSimple create a class with methods and some options\r\n\r\n```ruby\r\nrequire \"sickle\"\r\n\r\nclass App\r\n  include Sickle::Runner\r\n\r\n  global_option :verbose                      # global flag\r\n\r\n  desc \"install one of the available apps\"    # command description\r\n  option :force                               # flag for `install` command\r\n  option :host, :default => \"localhost\"       # option\r\n  def install(name)\r\n    if options[:host]                         # access options\r\n      # do something\r\n    end\r\n    # the rest\r\n  end\r\n\r\n  desc \"list all apps, search is possible\"\r\n  def list(search = \"\")\r\n    # ...\r\n  end\r\n\r\nend\r\n\r\nApp.run(ARGV) # start parsing ARGV\r\n```\r\n\r\nThis will allow for execution command like:\r\n\r\n```bash\r\n$ mytool install foo\r\n$ mytool install foo --force --verbose --host 127.0.0.1\r\n$ mytool list\r\n$ mytool list rails --verbose\r\n```\r\n\r\nHelp is for free:\r\n\r\n```\r\n$ mytool help\r\nUSAGE:\r\n  mytool COMMAND [ARG1, ARG2, ...] [OPTIONS]\r\n\r\nTASKS:\r\n  help [COMMAND]  \r\n  install NAME    # install one of the available apps\r\n  list [SEARCH]   # list all apps, search is possible\r\n\r\nGLOBAL OPTIONS:\r\n  --verbose (default: false)\r\n```\r\n\r\nThere is also detailed help for command:\r\n\r\n```bash\r\n$ mytool help install\r\nUSAGE:\r\n  mytool install NAME\r\n\r\nDESCRIPTION:\r\n  install one of the available apps\r\n\r\nOPTIONS:\r\n  --force (default: false)\r\n  --host (default: localhost)\r\n```\r\n\r\n\r\n### Advanced usage - multiple modules\r\n\r\n```ruby\r\nmodule Users\r\n  include Sickle::Runner\r\n\r\n  desc \"list all users\"\r\n  def list\r\n    # ...\r\n  end\r\n\r\n  desc \"create new user\"\r\n  def create(name)\r\n    # ...\r\n  end\r\nend\r\n\r\nmodule Projects\r\n  include Sickle::Runner\r\n\r\n  desc \"list all projects\"\r\n  def list\r\n    # ...\r\n  end\r\nend\r\n\r\nmodule Global\r\n  include Sickle::Runner\r\n\r\n  desc \"have some fun at top level\"\r\n  def fun\r\n    # ...\r\n  end\r\nend\r\n\r\nclass App\r\n  include Sickle::Runner\r\n\r\n  desc \"top level command\"\r\n  def main\r\n    # ...\r\n  end\r\n\r\n  include_modules :users => Users,      # bind commands from Users module under \"users\" namespace\r\n                  :p     => Projects    # bind commands from Projects module under \"p\" namespace\r\n\r\n  include Global                        # bind command from Global module at top level namespace\r\nend\r\n\r\nApp.run(ARGV)\r\n\r\n```\r\n\r\nRun `$ mytool help` to see how commands are namespaced:\r\n\r\n```bash\r\n$ mytool help\r\nUSAGE:\r\n  mytool COMMAND [ARG1, ARG2, ...] [OPTIONS]\r\n\r\nTASKS:\r\n  fun                # have some fun at top level\r\n  help [COMMAND]     \r\n  main               # top level command\r\n  p:list             # list all projects\r\n  users:create NAME  # create new user\r\n  users:list         # list all users\r\n```\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}